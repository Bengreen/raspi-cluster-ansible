
- name: Set Config
  set_fact:
    targetDir: /opt/gateway
    images:
      - https://dietpi.com/downloads/images/DietPi_RPi-ARMv8-Bookworm.7z
      # - https://dietpi.com/downloads/images/DietPi_NativePC-UEFI-x86_64-Bookworm_Installer.iso.xz
    tftpDir: /tftpboot
- set_fact:
    mountImageName: "{{ (images[0] | basename).split('.') | first }}"

- debug:
    msg: "mountImageName is {{ mountImageName }}"

- name: Install rsync
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - rsync

- name: Update of /tftpboot dir
  ansible.builtin.debug:
    msg: tftpbbot dir {{ tftpDir }}

- name: Ensure group "gateway" exists
  group:
    name: gateway
    state: present

- name: add user gateway
  user:
    name: gateway
    shell: /usr/sbin/nologin
    groups: gateway

- name: Provide gateway with rw access to tftpboot
  file:
    path: "{{ tftpDir }}"
    state: directory
    group: gateway
    mode: '0775'
  register: tftpbootDir

- name: images
  file:
    path: "{{ targetDir }}/images"
    state: directory
    mode: '0755'

- name: download os image
  get_url:
    url: "{{ item }}"
    dest: "{{ targetDir }}/images/{{ item | basename }}"
  loop: "{{ images }}"

- name: unpack images
  command:
    chdir: "{{ targetDir }}/images"
    cmd: "p7zip -d -f -k {{ item | basename }}"
    creates: "{{ targetDir }}/images/{{ item | basename }}.img"
  loop: "{{ images }}"

- name: Mount point for partition 1
  file:
    path: "{{ targetDir }}/images/{{ mountImageName }}"
    state: directory
    mode: '0755'

- name: unmount parition 1 - clear before start
  mount:
    path: "{{ targetDir }}/images/{{ mountImageName }}"
    state: absent

# - name: delete losetup
#   command: losetup -d /dev/loop0

- name: losetup
  command:
    cmd: "losetup -P /dev/loop0 {{ targetDir }}/images/{{ mountImageName }}.img"
    creates: /dev/loop0p1

- name: Mount partition 1
  mount:
    path: "{{ targetDir }}/images/{{ mountImageName }}"
    src: /dev/loop0p1
    fstype: vfat
    state: mounted

# - name: End the play to debug
#   meta: end_host


# - name: Synchronize two directories on one remote host.
#   synchronize:
#     src: "{{ targetDir }}/images/{{ mountImageName }}/"
#     dest: "{{ tftpDir }}"
#     group: false
#     perms: false
#   delegate_to: "{{ inventory_hostname }}"

- name: Synchronize two directories on one remote host.
  synchronize:
    src: "/boot/"
    dest: "{{ tftpDir }}"
    group: false
    perms: false
  delegate_to: "{{ inventory_hostname }}"


# - name: End the play to debug
#   meta: end_host

- name: unmount parition 1
  mount:
    path: "{{ targetDir }}/images/{{ mountImageName }}"
    state: absent

- name: delete losetup
  command: losetup -d /dev/loop0

- name: Python venv tools
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - python3-pip
    - python-setuptools # Needed for ansible to switch to python3
    - virtualenv

- name: Copy Gateway files
  copy:
    src: python
    dest: "{{ targetDir }}"
  notify: Restart Gateway

- name: Install Gateway app
  pip:
    name: "{{ targetDir }}/python"
    virtualenv: "{{ targetDir }}/venv"
    virtualenv_python: python3

- name: Gateway Systemd
  copy:
    src: systemd/gateway.service
    dest: /etc/systemd/system/

- name: Make sure gateway service is running
  systemd:
    name: gateway
    enabled: yes
