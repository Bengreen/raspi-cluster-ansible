---
- name: Set targetDir
  set_fact:
    targetDir: /initrd
    imageName: imageRamfs.igz
    tftpDir: /tftpboot

- name: install initrd build packages
  apt:
    name: "{{ packages }}"
    state: present
    # update_cache: yes
  vars:
    packages:
    - cpio
    - fakeroot
    - netcat
    - busybox-static
    - p7zip

- name: Initrd initial filesystem
  file:
    path: "{{ targetDir }}/rootfs"
    state: directory
    mode: '0755'

- name: Boot Files
  copy:
    src: "{{ item }}"
    dest: "{{ targetDir }}/rootfs/"
  register: bootFiles
  with_items:
    - init
    - download.sh
    - etc

- name: Fakeroot script
  template:
    src: fakeroot.sh.j2
    dest: "{{ targetDir }}/fakeroot.sh"
  register: buildScript


- name: fakeroot cpio build
  shell:
    cmd: /usr/bin/fakeroot < fakeroot.sh
    chdir: "{{ targetDir }}"
  when: buildScript.changed or bootFiles.changed

# - name: fakeroot cpio build
#   command: /usr/bin/fakeroot < fakeroot.sh
#   args:
#     chdir: "{{ targetDir }}"
#   when: initrdBuild.changed
    # stdin: |
    #     pushd rootfs
    #     chmod +x init download.sh
    #     mkdir -p dev bin sbin etc tmp proc sys usr/bin usr/sbin var/run var/lib/dhcp usr/lib/arm-linux-gnueabihf lib/arm-linux-gnueabihf
    #     cp /bin/busybox bin/

    #     chmod +x etc/network/if-down.d/* etc/network/if-up.d/* etc/network/if-pre-up.d/* etc/network/if-post-down.d/*
    #     chmod +x etc/udhcpc/default.script

    #     # Network dependencies
    #     cp /sbin/ethtool sbin/
    #     cp /usr/lib/arm-linux-gnueabihf/libarmmem-v7l.so usr/lib/arm-linux-gnueabihf/
    #     cp /lib/arm-linux-gnueabihf/libm.so.6 usr/lib/arm-linux-gnueabihf/
    #     cp /lib/arm-linux-gnueabihf/libc.so.6 usr/lib/arm-linux-gnueabihf/
    #     cp /lib/ld-linux-armhf.so.3 lib/

    #     cp /sbin/resolvconf sbin/
    #     cp /etc/resolvconf/ etc/


    #     cp /usr/bin/p7zip usr/bin/
    #     cp /usr/bin/7zr usr/bin/
    #     mkdir -p usr/lib/p7zip
    #     cp /usr/lib/p7zip/7zr usr/lib/p7zip/
    #     cp /lib/arm-linux-gnueabihf/libpthread.so.0 lib/arm-linux-gnueabihf/
    #     cp /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 usr/lib/arm-linux-gnueabihf/
    #     cp /lib/arm-linux-gnueabihf/libgcc_s.so.1 usr/lib/arm-linux-gnueabihf/

    #     cp /bin/nc bin/

    #     mknod dev/mmcblk0 b 179 0
    #     mknod dev/mmcblk0p1 b 179 1
    #     mknod dev/mmcblk0p2 b 179 2

    #     find . | cpio -H newc -o | gzip > ../{{ imageName }}
    #     exit


- name: Imager Files
  file:
    path: "{{ tftpDir }}/imager"
    state: directory
    mode: '0755'

- name: copy ramdisk to tftpboot
  copy:
    src: "{{ targetDir }}/{{ imageName }}"
    dest: "{{ tftpDir }}/imager/{{ imageName }}"
    remote_src: yes

- name: config.txt
  copy:
    src: config.txt
    dest: "{{ tftpDir }}/imager/"
    # owner: root
    # group: root
    # mode: 0644

- name: cmdline_imager.txt
  copy:
    src: cmdline_imager.txt
    dest: "{{ tftpDir }}/imager/"
    # owner: root
    # group: root
    # mode: 0644

- name: Copy standard filesystem
  copy:
    src: "/boot/{{ item }}"
    dest: "{{ tftpDir }}/imager/"
    remote_src: yes
  loop:
    - start4.elf
    - start4cd.elf
    - fixup4cd.dat
    - kernel8.img
    - bcm2711-rpi-4-b.dtb
