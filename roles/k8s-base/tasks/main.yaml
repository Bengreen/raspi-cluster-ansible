
- name: Install kubelet kubeadm
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: present
  vars:
    packages:
    - kubelet={{ kubernetes_version }}
    - kubeadm={{ kubernetes_version }}
    - containernetworking-plugins
    - containerd.io

- name: modules-load.d
  copy:
    dest: /etc/modules-load.d/k8s.conf
    src: files/modules-load.d/k8s.conf
    owner: root
    group: root
    mode: '0644'
  register: modulesLoad

- name: modprobe overlay
  shell: modprobe overlay && modprobe br_netfilter
  become: true
  become_user: root
  when: modulesLoad.changed

- name: sysctrl.d
  copy:
    dest: /etc/sysctl.d/k8s.conf
    src: files/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: '0644'
  register: sysctrl

- name: sysctrl system
  shell: sysctl --system
  become: true
  become_user: root
  when: sysctrl.changed

- name: Setup net sysctl rules
  sysctl:
    name: "{{ item }}"
    value: '1'
    state: present
  with_items:
  - net.bridge.bridge-nf-call-iptables
  - net.bridge.bridge-nf-call-ip6tables
  - net.ipv4.ip_forward


- name: Enable CRI plugins
  copy:
    src: files/containerd/config.toml
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  register: containerdConfig

# - name: Enable CRI plugin
#   lineinfile:
#     path: /etc/containerd/config.toml
#     regexp: '^disabled_plugins = *'
#     line: disabled_plugins = []
#   register: containerdConfig


- name: Clear Kube
  block:
  - name: kubeadm reset
    command: kubeadm reset -f

  - name: Clear CNI
    file:
      state: absent
      path: /etc/cni/net.d

  - name: Clear cni network
    command: ip link delete cni0
    ignore_errors: yes

  - name: Clear flannel network
    command: ip link delete flannel.1
    ignore_errors: yes

  - name: reset iptables
    command:
      cmd: "{{ item }}"
    with_items:
      - iptables -P INPUT ACCEPT
      - iptables -P FORWARD ACCEPT
      - iptables -P OUTPUT ACCEPT
      - iptables-legacy -P INPUT ACCEPT
      - iptables-legacy -P FORWARD ACCEPT
      - iptables-legacy -P OUTPUT ACCEPT
      - iptables -Z
      - iptables -F
      - iptables -t nat -F
      - iptables -t mangle -F
      - iptables -X
      - iptables-legacy -Z
      - iptables-legacy -F
      - iptables-legacy -t nat -F
      - iptables-legacy -t mangle -F
      - iptables-legacy -X

  when: kubeAdmReset

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    daemon_reload: yes
  when: containerdConfig.changed
